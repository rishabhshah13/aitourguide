name: CI/CD Pipeline

on:
  push:
    branches:
      - ci/cd
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Update this to match the Node.js version in your Dockerfile

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      - name: Run frontend formatting
        working-directory: ./client
        run: npm run format

      - name: Run frontend linting
        working-directory: ./client
        run: npm run lint

      - name: Run frontend unit tests
        working-directory: ./client
        run: npm test

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Match the Python version in your Dockerfile

      - name: Install backend dependencies
        working-directory: ./app
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          pip install flake8 black pytest

      # - name: Format with black
      #   run: |
      #     black --version
      #     black .
      #     black --check .
      # - name: Lint with flake8
      #   run: |
      #     flake8 --version
      #     flake8 .

      - name: Run backend tests
        # working-directory: ./app
        env:
          OPENAI_API_KEY2: ${{ secrets.OPENAI_API_KEY }}
        run: pytest

  push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    
    # - name: Build and push
    #   uses: docker/build-push-action@v6
    #   with:
    #     push: true
    #     tags: user/app:latest

    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "docker-compose.yml"

    # - name: Push Docker images
    #   run: |
    #     docker-compose push

    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ./app/Dockerfile

    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ./client/Dockerfile
