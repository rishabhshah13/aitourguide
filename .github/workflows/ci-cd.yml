name: CI/CD Pipeline

on:
  push:
    branches:
      - ci/cd
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Update this to match the Node.js version in your Dockerfile

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      - name: Run frontend formatting
        working-directory: ./client
        run: npm run format

      - name: Run frontend linting
        working-directory: ./client
        run: npm run lint

      - name: Run frontend unit tests
        working-directory: ./client
        run: npm test

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11' # Match the Python version in your Dockerfile

      - name: Install backend dependencies
        working-directory: ./app
        run: pip install -r requirements.txt

      - name: Run backend tests
        working-directory: ./app
        run: pytest

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose


      - name: Build Docker images
        run: docker-compose build

      - name: Log in to DockerHub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push Docker images
        run: |
          docker-compose push
